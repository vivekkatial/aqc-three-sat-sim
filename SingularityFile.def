BootStrap: docker
From: ubuntu:16.04

%labels
  Maintainer Vivek Katial
  R_Version 3.6.1

%apprun R
  exec R "${@}"

%apprun run_experiment
  exec Rscript "main.R ${@}"

%post
  # Software versions
  export R_VERSION=3.6.1

  # Get dependencies
  apt-get update
  apt-key update
  apt-get install -y --no-install-recommends \
    locales \
    ca-certificates

  # Configure default locale
  echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
  locale-gen en_US.utf8
  /usr/sbin/update-locale LANG=en_US.UTF-8
  export LC_ALL=en_US.UTF-8
  export LANG=en_US.UTF-8

  ####################################################
  # Python Installation
  ####################################################

  export PATH=/opt/conda/bin:$PATH
  apt-get update --fix-missing && apt-get install -y --no-install-recommends --allow-unauthenticated wget bzip2 ca-certificates \
    libglib2.0-0 libxext6 libsm6 libxrender1 \
    git mercurial subversion

  wget --quiet https://repo.anaconda.com/miniconda/Miniconda2-4.5.11-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

  apt-get install -y curl grep sed dpkg && \
    TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` && \
    curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \
    dpkg -i tini.deb && \
    rm tini.deb && \
    apt-get clean

  pip install mlflow>=1.0 \
    && pip install azure-storage==0.36.0 \
    && pip install numpy==1.14.3 \
    && pip install scipy \
    && pip install pandas==0.22.0 \
    && pip install scikit-learn==0.19.1 \
    && pip install cloudpickle
    
  ####################################################
  # AWS Installation
  ####################################################
  apt-get update
  apt-get install -y --no-install-recommends --allow-unauthenticated \
    awscli

  ####################################################
  # R Installation
  ####################################################

  # Install R
  echo "deb http://cran.r-project.org/bin/linux/ubuntu xenial-cran35/" > /etc/apt/sources.list.d/r.list
  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
  apt-get update
  apt-get install -y --no-install-recommends --allow-unauthenticated \
    r-base=${R_VERSION}* \
    r-base-core=${R_VERSION}* \
    r-base-dev=${R_VERSION}* \
    r-recommended=${R_VERSION}* \
    r-base-html=${R_VERSION}* \
    r-doc-html=${R_VERSION}* \
    libcurl4-openssl-dev \
    libssl-dev \
    libxml2-dev \
    libcairo2-dev \
    libxt-dev \

  # Add a default CRAN mirror
  echo "options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'libcurl')" >> /usr/lib/R/etc/Rprofile.site

  # Add a directory for host R libraries
  mkdir -p /library
  echo "R_LIBS_SITE=/library:\${R_LIBS_SITE}" >> /usr/lib/R/etc/Renviron.site

  # Install required R packages
  R --slave -e 'install.packages("tidyverse", repos="https://cloud.r-project.org/")'
  R --slave -e 'install.packages("yaml", repos="https://cloud.r-project.org/")'
  R --slave -e 'install.packages("complexplus", repos="https://cloud.r-project.org/")'
  R --slave -e 'install.packages("logging", repos="https://cloud.r-project.org/")'
  R --slave -e 'install.packages("mlflow", repos="https://cloud.r-project.org/")'
  R --slave -e 'mlflow::install_mlflow()'

  # Clean up
  rm -rf /var/lib/apt/lists/*

%runscript
  echo "Arguments received: $*"
  
  # Upload dummy file to AWS
  aws s3 cp Rplots.pdf  s3://testBucket/test.pdf --endpoint-url https://objects.storage.unimelb.edu.au

  # execute script
  Rscript src/make-templates.R

  # make template files
  echo "Completed making template files"

  # Migrate template files onto remote storage
  echo "Moving template files from CONTAINER to AWS S3 STORAGE"
  aws s3 sync --exclude="*" --include="*.yml" s3://testBucket/experiments/aqc-three-sat-sim/ready/ params/ready/
  # aws s3 cp params/ready/* s3://testBucket/experiments/aqc-three-sat-sim/ready/
